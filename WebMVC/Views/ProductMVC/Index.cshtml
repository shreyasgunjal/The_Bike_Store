@model IEnumerable<WebMVC.Models.Product>

@{
    ViewBag.Title = "Product Details";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var dropdownOptions = new List<SelectListItem>
{
        new SelectListItem { Value = "1", Text = "Category Name" },
        new SelectListItem { Value = "2", Text = "Model Year" },
        new SelectListItem { Value = "3", Text = "Brand Name" },
        new SelectListItem { Value = "4", Text = "Customer Order" },
        new SelectListItem { Value = "5", Text = "Product By Store" },
        new SelectListItem { Value = "6", Text = "Best Seller" }, // purchased by max customer
        new SelectListItem { Value = "7", Text = "Product With Minimum stock" }
    };
}

<h2 class="my-4">Product Details</h2>

@using (Html.BeginForm("Index", "ProductMVC", FormMethod.Get))
{
    <div class="container">
        <div class="row mb-4">
            <div class="col-md-12">
                <div class="d-flex align-items-center">
                    <!-- Filter Dropdown and Search Input -->
                    <div class="d-flex align-items-center me-3 flex-grow-1">
                        <!-- Filter Dropdown -->
                        <div class="me-2">
                            @Html.DropDownList("filterOption", dropdownOptions, "Filter By", new { @class = "form-select", id = "filterOption" })
                        </div>

                        <!-- Search Input -->
                        <div class="flex-grow-1">
                            <input type="text" id="searchInput" name="searchTerm" placeholder="Search" class="form-control" />
                        </div>
                    </div>

                    <!-- Search Button -->
                    <button type="submit" class="btn btn-primary">Search</button>
                </div>
            </div>
        </div>
    </div>
}

<div class="container mb-4">
    <!-- Create New Button -->
    <div class="d-flex justify-content-end">
        <a href="@Url.Action("Create", "ProductMVC")" class="btn btn-lg btn-success shadow-lg">
            <i class="bi bi-plus-lg"></i> Create New
        </a>
    </div>
</div>

<div class="container">
    @if (Model != null && Model.Any())
    {
        <table class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.Product_Id)</th>
                    <th>@Html.DisplayNameFor(model => model.Product_Name)</th>
                    <th>@Html.DisplayNameFor(model => model.Brand_Id)</th>
                    <th>@Html.DisplayNameFor(model => model.Category_Id)</th>
                    <th>@Html.DisplayNameFor(model => model.Model_Year)</th>
                    <th>@Html.DisplayNameFor(model => model.List_Price)</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.Product_Id)</td>
                        <td>@Html.DisplayFor(modelItem => item.Product_Name)</td>
                        <td>@Html.DisplayFor(modelItem => item.Brand_Id)</td>
                        <td>@Html.DisplayFor(modelItem => item.Category_Id)</td>
                        <td>@Html.DisplayFor(modelItem => item.Model_Year)</td>
                        <td>@Html.DisplayFor(modelItem => item.List_Price)</td>
                        <td>
                            @Html.ActionLink("Edit", "Edit", new { id = item.Product_Id }, new { @class = "btn btn-warning btn-sm" }) |
                            @Html.ActionLink("Details", "Details", new { id = item.Product_Id }, new { @class = "btn btn-info btn-sm" }) |
                            @Html.ActionLink("Delete", "Delete", new { id = item.Product_Id }, new { @class = "btn btn-danger btn-sm" })
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    @*else
        {
            <p>No products found.</p>
        }*@




    @if (ViewBag.PurchaseByCustId != null)
    {
        <div class="container mt-4">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Product Name</th>
                        <th>Category Name</th>
                        <th>Brand Name</th>
                        <th>Quantity</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in ViewBag.PurchaseByCustId)
                    {
                        <tr>
                            <td>@item.ProductName</td>
                            <td>@item.CategoryName</td>
                            <td>@item.BrandName</td>
                            <td>@item.Quantity</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }

    @if (ViewBag.ProductsByStore != null)
    {
        <div class="container mt-4">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Store ID</th>
                        <th>Store Name</th>
                        <th>Number of Product Sold</th>

                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in ViewBag.ProductsByStore)
                    {
                        <tr>
                            <td>@item.StoreId</td>
                            <td>@item.StoreName</td>
                            <td>@item.NumberOfProductsSold</td>

                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }



    @if (ViewBag.BestSeller != null)
    {
        <div class="container mt-4">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Product ID</th>
                        <th>Product Name</th>
                        <th>Customer Count</th>

                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in ViewBag.BestSeller as IEnumerable<WebMVC.Models.BestSeller>)
                    {
                        <tr>
                            <td>@item.ProductId</td>
                            <td>@item.ProductName</td>
                            <td>@item.CustomerCount</td>

                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }

    @if (ViewBag.ProductsWithMinStock != null)
    {
        <div class="container mt-4">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Product ID</th>
                        <th>Product Name</th>
                        <th>MinimumStock</th>

                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in ViewBag.ProductsWithMinStock)
                    {
                        <tr>
                            <td>@item.ProductId</td>
                            <td>@item.ProductName</td>
                            <td>@item.MinimumStock</td>

                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }


    @if (!string.IsNullOrEmpty(ViewBag.Message))
    {
        <div class="alert alert-info mt-3">
            @ViewBag.Message
        </div>
    }

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var filterDropdown = document.getElementById('filterOption');
            var searchInput = document.getElementById('searchInput');

            function updateSearchInput() {
                var selectedValue = filterDropdown.value;

                switch (selectedValue) {
                    case "1":
                        searchInput.placeholder = "Enter Category Name";
                        searchInput.name = "catName";
                        break;
                    case "2":
                        searchInput.placeholder = "Enter Model Year";
                        searchInput.name = "modelYear";
                        break;
                    case "3":
                        searchInput.placeholder = "Enter Brand Name";
                        searchInput.name = "brandName";
                        break;
                    case "4":
                        searchInput.placeholder = "Enter Customer ID";
                        searchInput.name = "custId";
                        break;
                    case "5":
                        //  searchInput.placeholder = "Enter Store ID";
                        // searchInput.name = "storeId";
                        document.getElementById('searchInput').style.display = 'none';
                        break;
                    case "6":
                        //  searchInput.placeholder = "Enter Store ID"; bestseller
                        // searchInput.name = "storeId";
                        document.getElementById('searchInput').style.display = 'none';
                        break;
                    case "7":
                        //  searchInput.placeholder = "Enter Store ID";
                        // searchInput.name = "storeId";
                        document.getElementById('searchInput').style.display = 'none';
                        break;
                    default:
                        searchInput.placeholder = "Search";
                        searchInput.name = "searchTerm";
                }
            }

            filterDropdown.addEventListener('change', updateSearchInput);
            updateSearchInput();  // Initialize the input field based on the default dropdown value
        });
    </script>

    <style>
        .container {
            max-width: 1200px;
        }

        .form-select, .form-control {
            height: calc(2.25rem + 2px);
            border-radius: 0.375rem; /* Rounded corners */
        }

        .btn-primary, .btn-success {
            height: calc(2.25rem + 2px);
            padding: 0.375rem 0.75rem;
            border-radius: 0.375rem; /* Rounded corners */
        }

        .btn-success {
            background-color: #28a745;
            border-color: #28a745;
            font-size: 1.125rem; /* Larger text */
        }

            .btn-success i {
                margin-right: 0.5rem; /* Space between icon and text */
            }

        .btn-warning, .btn-info, .btn-danger {
            border-radius: 0.375rem;
        }

        .btn-warning {
            background-color: #ffc107;
            border-color: #ffc107;
        }

        .btn-info {
            background-color: #17a2b8;
            border-color: #17a2b8;
        }

        .btn-danger {
            background-color: #dc3545;
            border-color: #dc3545;
        }

        .table {
            background-color: #fff;
            border: 1px solid #dee2e6;
            border-radius: 0.375rem; /* Rounded corners */
        }

            .table th, .table td {
                text-align: center;
                vertical-align: middle;
            }

        .table-striped tbody tr:nth-of-type(odd) {
            background-color: #f2f2f2; /* Zebra striping */
        }

        .alert-info {
            border-radius: 0.375rem;
            padding: 0.75rem 1.25rem;
        }

        .shadow-lg {
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important; /* Larger shadow */
        }
    </style>
