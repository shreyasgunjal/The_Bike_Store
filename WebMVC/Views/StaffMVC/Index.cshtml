@model IEnumerable<WebMVC.Models.Staff>

@{
    ViewBag.Title = "Show All Staff";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var dropdownOptions = new List<SelectListItem>
{
    new SelectListItem { Value = "1", Text = "GetManagerDetails" },
    new SelectListItem { Value = "2", Text = "SalesMadeByStaff" },
    new SelectListItem { Value = "3", Text = "GetStaffByStoreName" }
    };
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title</title>
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <!-- Custom CSS -->
    <style>
        body {
            padding-top: 20px;
            background-color: #f8f9fa;
        }

        .container {
            padding-top: 21px !important;
            max-width: 1200px;
        }

        .table thead th {
            background-color: #007bff;
            color: white;
        }

        .table tbody tr:nth-child(odd) {
            background-color: #ffffff;
        }

        .table tbody tr:hover {
            background-color: #f1f1f1;
        }

        .action-links a {
            margin-right: 5px;
        }

            .action-links a:last-child {
                margin-right: 0;
            }

        .btn-custom {
            background-color: #28a745;
            color: white;
            border: none;
            border-radius: 0.25rem;
            padding: 10px 20px;
            font-size: 16px;
            font-weight: bold;
            cursor: pointer;
        }

            .btn-custom:hover {
                background-color: #218838;
                color: white;
            }

            .btn-custom:focus, .btn-custom:active {
                box-shadow: none;
                outline: none;
            }

        .info-box {
            background-color: #e9ecef;
            padding: 15px;
            border-radius: 0.25rem;
            margin-top: 20px;
        }

        .table-footer {
            background-color: #f8f9fa;
            font-weight: bold;
            padding: 10px;
            border-top: 2px solid #007bff;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2 class="mb-4">Show All Staff </h2>

        <div class="mb-4">
            <form action="@Url.Action("Create")" method="get">
                <button type="submit" class="btn btn-custom">Create New</button>
            </form>
        </div>

        @using (Html.BeginForm("Index", "StaffMVC", FormMethod.Get))
        {
            <div class="container">
                <div class="row mb-4">
                    <div class="col-md-12">
                        <div class="d-flex align-items-center justify-content-end">
                            <!-- Filter Dropdown -->
                            <div class="me-2">
                                @Html.DropDownList("filterOption", dropdownOptions, "Filter By", new { @class = "form-select" })
                            </div>

                            <!-- Search Input -->
                            <div class="me-2 flex-grow-1">
                                <input type="text" id="searchInput" name="searchTerm" placeholder="Search" class="form-control" />
                            </div>

                            <!-- Search Button -->
                            <button type="submit" class="btn btn-primary">Search</button>
                        </div>
                    </div>
                </div>
            </div>
        }

        @*<p>
                @Html.ActionLink("Create New", "Create")
            </p>*@

        @if (Model != null && Model.Any())
        {
            <table class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th>@Html.DisplayNameFor(model => model.Staff_Id)</th>
                        <th>@Html.DisplayNameFor(model => model.First_Name)</th>
                        <th>@Html.DisplayNameFor(model => model.Last_Name)</th>
                        <th>@Html.DisplayNameFor(model => model.Email)</th>
                        <th>@Html.DisplayNameFor(model => model.Phone)</th>
                        <th>@Html.DisplayNameFor(model => model.Active)</th>
                        <th>@Html.DisplayNameFor(model => model.Store_Id)</th>
                        <th>@Html.DisplayNameFor(model => model.Manager_Id)</th>
                        <th>@Html.DisplayNameFor(model => model.Password)</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    <div class="row">
                        @foreach (var item in Model)
                        {

                        <tr>
                            <td>@Html.DisplayFor(modelItem => item.Staff_Id)</td>
                            <td>@Html.DisplayFor(modelItem => item.First_Name)</td>
                            <td>@Html.DisplayFor(modelItem => item.Last_Name)</td>
                            <td>@Html.DisplayFor(modelItem => item.Email)</td>
                            <td>@Html.DisplayFor(modelItem => item.Phone)</td>
                            <td>@Html.DisplayFor(modelItem => item.Active)</td>
                            <td>@Html.DisplayFor(modelItem => item.Store_Id)</td>
                            <td>@Html.DisplayFor(modelItem => item.Manager_Id)</td>
                            <td>@Html.DisplayFor(modelItem => model.Password)</td>

                            <td class="action-links">
                                @Html.ActionLink("Edit", "Edit", new { id = item.Staff_Id }, new { @class = "btn btn-warning btn-sm" }) |
                                @Html.ActionLink("Details", "Details", new { id = item.Staff_Id }, new { @class = "btn btn-info btn-sm" }) |
                                @Html.ActionLink("Delete", "Delete", new { id = item.Staff_Id }, new { @class = "btn btn-danger btn-sm" })
                            </td>
                        </tr>
                    }
                        @*}*@
                    </tbody>
                </table>
            }

        @if (ViewBag.SalesByStaff != null)
        {
            <table width="200">
                <tr>
                    <th>Order Id</th>
                    <th>First Name</th>
                    <th>Last Name</th>
                </tr>
                @foreach (var item in ViewBag.SalesByStaff)
                {
                    <tr>
                        <td>@item.OrderId</td>
                        <td>@item.FirstName</td>
                        <td>@item.LastName</td>
                    </tr>

                }
            </table>
        }

</body>
</html>
</div>
@if (!string.IsNullOrEmpty(ViewBag.Message))
{
    <div class="alert alert-info">
        @ViewBag.Message
    </div>
}
<script>
    document.addEventListener('DOMContentLoaded', function () {
        var filterDropdown = document.getElementById('filterOption');
        var searchInput = document.getElementById('searchInput');

        filterDropdown.addEventListener('change', function () {
            var selectedValue = this.value;

            if (selectedValue === "1" || selectedValue === "2") {
                searchInput.placeholder = "Enter Staff Id";
                searchInput.name = "id";
            } else if (selectedValue === "3") {
                searchInput.placeholder = "Enter Store Name";
                searchInput.name = "storeName";
            }
            else {
                searchInput.placeholder = "Search"
                searchInput.name = "searchTerm";
            }
        });

        filterDropdown.dispatchEvent(new Event('change'));
    });
</script>

<style>
    .container {
        max-width: 100% !important;
    }

    .form-select, .form-control {
        height: calc(2.25rem + 2px);
    }

    .btn-primary {
        height: calc(2.25rem + 2px);
        padding: 0.375rem 0.75rem;
    }

    .d-flex {
        display: flex;
    }

    .align-items-center {
        align-items: center;
    }

    .justify-content-end {
        justify-content: end;
    }

    .flex-grow-1 {
        flex-grow: 1;
    }
</style>
