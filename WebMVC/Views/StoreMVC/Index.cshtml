@model IEnumerable<WebMVC.Models.Store>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var dropdownOptions = new List<SelectListItem>
{
        new SelectListItem { Value = "1", Text = "City" },
        new SelectListItem { Value = "2", Text = "Number of stores in each state" },
        new SelectListItem { Value = "3", Text = "Store with maximum customers" },
        new SelectListItem { Value = "4", Text = "Store with highest sales" }
    };
}

<h2 class="mb-4">Store</h2>

@using (Html.BeginForm("Index", "StoreMVC", FormMethod.Get))
{
    <div class="container">
        <div class="row mb-4">
            <div class="col-md-12">
                <div class="d-flex align-items-center justify-content-between">
                    <!-- Filter Dropdown -->
                    <div class="me-2 flex-shrink-1">
                        @Html.DropDownList("filterOption", dropdownOptions, "Filter By", new { @class = "form-select" })
                    </div>

                    <!-- Search Input -->
                    <div class="flex-grow-1 me-2">
                        <input type="text" id="searchInput" name="searchTerm" placeholder="Search" class="form-control" />
                    </div>

                    <!-- Search Button -->
                    <button type="submit" class="btn btn-primary">Search</button>
                </div>
            </div>
        </div>
    </div>
}

<p>
    <!-- Create New Button -->
    <a href="@Url.Action("Create")" class="btn btn-success">Create New</a>
</p>

<table class="table table-striped table-hover">
    @if (Model != null && Model.Any())
    {
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.Store_Id)</th>
                <th>@Html.DisplayNameFor(model => model.Store_Name)</th>
                <th>@Html.DisplayNameFor(model => model.Phone)</th>
                <th>@Html.DisplayNameFor(model => model.Email)</th>
                <th>@Html.DisplayNameFor(model => model.Street)</th>
                <th>@Html.DisplayNameFor(model => model.City)</th>
                <th>@Html.DisplayNameFor(model => model.State)</th>
                <th>@Html.DisplayNameFor(model => model.Zip_Code)</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Store_Id)</td>
                    <td>@Html.DisplayFor(modelItem => item.Store_Name)</td>
                    <td>@Html.DisplayFor(modelItem => item.Phone)</td>
                    <td>@Html.DisplayFor(modelItem => item.Email)</td>
                    <td>@Html.DisplayFor(modelItem => item.Street)</td>
                    <td>@Html.DisplayFor(modelItem => item.City)</td>
                    <td>@Html.DisplayFor(modelItem => item.State)</td>
                    <td>@Html.DisplayFor(modelItem => item.Zip_Code)</td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.Store_Id }, new { @class = "btn btn-warning btn-sm" }) |
                        @Html.ActionLink("Details", "Details", new { id = item.Store_Id }, new { @class = "btn btn-info btn-sm" }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.Store_Id }, new { @class = "btn btn-danger btn-sm" })
                    </td>
                </tr>
            }
        </tbody>
    }
    else
    {
        <tr>
            <td colspan="9" class="text-center">No stores available.</td>
        </tr>
    }
</table>

@if (ViewBag.StoreWithMaxCustomer != null)
{
    <div class="alert alert-info">
        <strong>Store with Maximum Customers:</strong> @ViewBag.StoreWithMaxCustomer
    </div>
}

@if (ViewBag.StoreWithHighestSale != null)
{
    <div class="alert alert-success">
        <strong>Store with Highest Sales:</strong> @ViewBag.StoreWithHighestSale
    </div>
}

@if (ViewBag.TotalStoresInState != null)
{
    <div class="table-responsive">
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>State</th>
                    <th>Total Stores</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in ViewBag.TotalStoresInState)
                {
                    <tr>
                        <td>@item.State</td>
                        <td>@item.TotalStores</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@if (!string.IsNullOrEmpty(ViewBag.Message))
{
    <div class="alert alert-info">
        @ViewBag.Message
    </div>
}

<script>
    document.addEventListener('DOMContentLoaded', function () {
        var filterDropdown = document.getElementById('filterOption');
        var searchInput = document.getElementById('searchInput');

        filterDropdown.addEventListener('change', function () {
            var selectedValue = this.value;

            if (selectedValue === "2" || selectedValue === "3" || selectedValue === "4") {
                searchInput.style.display = 'none';
            } else {
                searchInput.style.display = 'inline-block';

                if (selectedValue === "1") {
                    searchInput.placeholder = "Enter city";
                    searchInput.name = "city";
                }
            }
        });

        filterDropdown.dispatchEvent(new Event('change'));
    });
</script>

<style>
    .container {
        max-width: 1200px;
    }

    .form-select, .form-control, .btn {
        height: calc(2.25rem + 2px);
    }

    .btn-primary {
        padding: 0.375rem 0.75rem;
    }

    .table {
        border-collapse: collapse;
        width: 100%;
    }

        .table th, .table td {
            text-align: left;
            padding: 8px;
        }

    .table-bordered th, .table-bordered td {
        border: 1px solid #dee2e6;
    }

    .btn-success {
        font-size: 1rem;
    }

    .btn-warning, .btn-info, .btn-danger {
        font-size: 0.875rem;
    }
</style>
